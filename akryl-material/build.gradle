apply plugin: "kotlin2js"
apply plugin: "org.jetbrains.kotlin.frontend"
apply plugin: "maven"
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def getVersionName() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--abbrev=0', '--tags'
        standardOutput = stdout
    }
    def output = stdout.toString().trim()
    output = output.replaceFirst(/v([\d.]+)/, '$1')
    output = output.replaceFirst(/v([\d.]+)-(\d+)-.*/, '$1')
    return output
}

group = "io.akryl"
version = getVersionName()

dependencies {
    compile "io.akryl:akryl-core:0.+"
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
}

compileKotlin2Js {
    kotlinOptions {
        metaInfo = true
        sourceMap = true
        moduleKind = "commonjs"
        main = "nocall"
        freeCompilerArgs = [
                "-XXLanguage:+InlineClasses",
                "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes"
        ]
    }
}

compileTestKotlin2Js {
    kotlinOptions {
        metaInfo = true
        sourceMap = true
        moduleKind = "commonjs"
        main = "nocall"
        freeCompilerArgs = [
                "-XXLanguage:+InlineClasses",
                "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes"
        ]
    }
}

kotlinFrontend {
    npm {
        dependency("react", "16.8.6")
        dependency("react-dom", "16.8.6")
        dependency("@material-ui/core", "4.4.1")
    }
}

jar {
    // Prevent transitive npm dependency errors
    doFirst {
        File file = new File("$buildDir/resources/main/package.json")
        String content = file.text
        content = content.replaceAll('"dependencies": \\{[^}]+}', '"dependencies": {}')
        file.write(content)
    }

    baseName = project.getProperty('name')
    manifest {
        attributes 'Implementation-Title': 'Akryl Material'
        attributes 'Implementation-Version': version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    configurations = ['archives']
    pkg {
        repo = 'akryl'
        name = 'akryl-material'
        vcsUrl = 'https://github.com/akryl-kt/akryl-material.git'
        licenses = ['MIT']
        version {
            name = project.version
            desc = 'Akryl Material'
            released  = new Date()
            vcsTag = "v$project.version"
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
